{"version":3,"sources":["JokeContext.js","Jokes.js","App.js","index.js"],"names":["JokeContext","createContext","Jokes","useState","joke","jokes","setJokes","useContext","changeCat","fetchJoke","a","axios","get","result","response","data","value","useEffect","className","App","setChangeCat","categories","setCategories","configCat","method","url","headers","then","catch","error","console","log","Provider","href","id","map","item","onClick","document","getElementById","classList","add","ReactDOM","render","StrictMode"],"mappings":"wOAEaA,EAAcC,yBAAc,G,eCwC1BC,EArCD,WAEV,MAA0BC,mBAAS,CAC/BC,KAAM,KADV,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAAoBC,qBAAWP,GAAxBQ,EAAP,oBAGMC,EAAS,uCAAG,8BAAAC,EAAA,sEAEOC,IAAMC,IAAN,2DACmCJ,IAH1C,OAERK,EAFQ,OAKRC,EAAWD,EAAOE,KAAKC,MAC7BV,EAAS,2BACFD,GADC,IAEJD,KAAMU,KARI,2CAAH,qDAiBf,OALAG,qBAAU,WACNR,MAED,CAACD,IAGA,qBAAKU,UAAU,QAAf,SACI,oBAAIA,UAAU,OAAd,SAEKb,EAAMD,UCgERe,MA9Ff,WAEI,MAAkChB,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBY,EAAlB,KAEA,EAAoCjB,mBAAS,IAA7C,mBAAOkB,EAAP,KAAmBC,EAAnB,KAIMC,EAAY,CACdC,OAAQ,MACRC,IAAK,8CACLC,QAAS,CACL,eAAgB,oBAEpBX,KATS,IAuBb,OAVAE,qBAAU,WACNN,IAAMY,GACDI,MAAK,SAACb,GACHQ,EAAcR,EAASC,SAE1Ba,OAAM,SAAUC,GACbC,QAAQC,IAAIF,QAGrB,IAEC,cAAC7B,EAAYgC,SAAb,CAAsBhB,MAAO,CAACR,EAAWY,GAAzC,SACI,sBAAKF,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,oDAEA,yVASA,mBAAGe,KAAK,SAASf,UAAU,MAA3B,+BAGR,sBAAKA,UAAU,gBAAf,UACI,oBAAIgB,GAAG,QAAP,gDACA,sBAAKhB,UAAU,SAAf,UACI,sBAAKA,UAAU,aAAf,UACKG,EAAWc,KAAI,SAACC,GACb,OACI,qBACIC,QAAS,WACLC,SACKC,eAAe,QACfC,UAAUC,IAAI,cAJ3B,SAOI,qBAEIJ,QAAS,kBAAMjB,EAAagB,IAC5BlB,UAAU,WAHd,SAKI,qBAAKA,UAAU,UAAf,SACI,6BAAKkB,OALJA,QAXzB,OAwBA,qBAAKlB,UAAU,cAAcgB,GAAG,OAAhC,SACI,cAAC,EAAD,MAEJ,qBAAKhB,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,kBAGvB,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,cAAf,SACI,mECvF5BwB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJN,SAASC,eAAe,W","file":"static/js/main.e57b7830.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const JokeContext = createContext(false);","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { JokeContext } from \"./JokeContext\";\r\nimport \"./style.css\";\r\n\r\nconst Jokes = () => {\r\n    // This is a state to hold the values of retrevied from the jokes API\r\n    const [jokes, setJokes] = useState({\r\n        joke: \"\",\r\n    });\r\n\r\n    // As a child element of App.js it has access to the values of categories from that file\r\n    const [changeCat] = useContext(JokeContext);\r\n\r\n    // This function fetches the API\r\n    const fetchJoke = async () => {\r\n        // The category gotten upon clicking is filled into the url to complete the API.\r\n        const result = await axios.get(\r\n            `https://api.chucknorris.io/jokes/random?category=${changeCat}`\r\n        );\r\n        const response = result.data.value;\r\n        setJokes({\r\n            ...jokes,\r\n            joke: response,\r\n        });\r\n    };\r\n    // It trigger the function\r\n    useEffect(() => {\r\n        fetchJoke();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [changeCat]);\r\n\r\n    return (\r\n        <div className=\"glass\">\r\n            <h4 className=\"joke\">\r\n                {/* Displays the joke from a given category */}\r\n                {jokes.joke}\r\n            </h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Jokes;\r\n","import React, { useState, useEffect } from \"react\";\nimport Jokes from \"./Jokes\";\nimport { JokeContext } from \"./JokeContext\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\nfunction App() {\n    // Creates a state for the category value being clicked to change to\n    const [changeCat, setChangeCat] = useState(\"\");\n    // Holds the value of the categories being pulled from the categories API\n    const [categories, setCategories] = useState([]);\n    const data = \"\";\n\n    // Consists of the API url\n    const configCat = {\n        method: \"get\",\n        url: \"https://api.chucknorris.io/jokes/categories\",\n        headers: {\n            \"content-type\": \"application/json\",\n        },\n        data: data,\n    };\n\n    // This conducts the fetch request to get the categories from the category API\n    useEffect(() => {\n        axios(configCat)\n            .then((response) => {\n                setCategories(response.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (\n        <JokeContext.Provider value={[changeCat, setChangeCat]}>\n            <div className=\"App\">\n                <div className=\"landing slideLeft\">\n                    <div className=\"landing-text\">\n                        <h1>Chuck Norris Jokes</h1>\n\n                        <p>\n                            Chuck Norris facts are satirical factoids about\n                            martial artist and actor Chuck Norris that have\n                            become an Internet phenomenon and as a result have\n                            become widespread in popular culture. The 'facts'\n                            are normally absurd hyperbolic claims about Norris'\n                            toughness, attitude, virility, sophistication, and\n                            masculinity.\n                        </p>\n                        <a href=\"#chuck\" className=\"btn\">Wanna laugh?</a>\n                    </div>\n                </div>\n                <div className=\"main expandUp\">\n                    <h2 id=\"chuck\">Click on category to get 'em jokes</h2>\n                    <div className=\" split\">\n                        <div className=\"first-half\">\n                            {categories.map((item) => {\n                                return (\n                                    <div\n                                        onClick={() => {\n                                            document\n                                                .getElementById(\"joke\")\n                                                .classList.add(\"slideLeft\");\n                                        }}\n                                    >\n                                        <div\n                                            key={item}\n                                            onClick={() => setChangeCat(item)}\n                                            className=\"category\"\n                                        >\n                                            <div className=\"details\">\n                                                <h5>{item}</h5>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                            ;\n                        </div>\n                        <div className=\"second-half\" id=\"joke\">\n                            <Jokes />\n                        </div>\n                        <div className=\"circle1\"></div>\n                        <div className=\"circle2\"></div>\n                        <div className=\"circle3\"></div>\n                    </div>\n                </div>\n                <div className=\"footer-bg\">\n                    <div className=\"footer\">\n                        <div className=\"footer-text\">\n                            <small>Osuka Technologies</small>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </JokeContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( \n    <React.StrictMode >\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}